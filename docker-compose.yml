version: "3.9"

services:
  postgres:
    image: postgres:14-alpine
    restart: always
    env_file:
      - .env
    logging:
      driver: gelf
      options:
        gelf-address: "udp://127.0.0.1:12201"
        tag: postgres
#    ports:
#      - "5432:5432"
    volumes:
      - db_data:/var/lib/postgresql/data

  redis:
    image: redis
    restart: always
    logging:
      driver: gelf
      options:
        gelf-address: "udp://127.0.0.1:12201"
        tag: redis
    environment:
      - decode_responses=True

  fastapi:
    build:
      context: .
    restart: always
    env_file:
      - .env
    logging:
      driver: gelf
      options:
        gelf-address: "udp://127.0.0.1:12201"
        tag: fastapi
    depends_on:
      - redis
      - postgres
#    ports:
#      - "8080:8080"

  nginx:
    image: nginx:latest
    restart: always
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/conf.d:/etc/nginx/conf.d/:ro
    logging:
      driver: gelf
      options:
        gelf-address: "udp://127.0.0.1:12201"
        tag: nginx
    depends_on:
      - fastapi
      - tg
    ports:
      - "81:81"
#      - "443:443"

  tg:
    build:
      context: .
      dockerfile: tg.Dockerfile
    restart: always
    env_file:
      - .env
    logging:
      driver: gelf
      options:
        gelf-address: "udp://127.0.0.1:12201"
        tag: tg
#    ports:
#      - "8080:8080"
#      - "80:80"
#      - "443:443"

  discord:
    build:
      context: .
      dockerfile: discord.Dockerfile
    restart: always
    env_file:
      - .env
    logging:
      driver: gelf
      options:
        gelf-address: "udp://127.0.0.1:12201"
        tag: discord
#    ports:
#      - "8080:8080"
#      - "80:80"
#      - "443:443"

volumes:
  db_data: